// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: server/proto/consignment/consignment.proto

package consignment

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//Коэффициенты квадратного уравнения
type Coefficients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int32 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	C int32 `protobuf:"varint,3,opt,name=c,proto3" json:"c,omitempty"`
}

func (x *Coefficients) Reset() {
	*x = Coefficients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_consignment_consignment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coefficients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coefficients) ProtoMessage() {}

func (x *Coefficients) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_consignment_consignment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coefficients.ProtoReflect.Descriptor instead.
func (*Coefficients) Descriptor() ([]byte, []int) {
	return file_server_proto_consignment_consignment_proto_rawDescGZIP(), []int{0}
}

func (x *Coefficients) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *Coefficients) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *Coefficients) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

//Решение квадратного уравнения
type Solution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coefs  *Coefficients `protobuf:"bytes,1,opt,name=coefs,proto3" json:"coefs,omitempty"`
	NRoots int32         `protobuf:"varint,2,opt,name=n_roots,json=nRoots,proto3" json:"n_roots,omitempty"`
}

func (x *Solution) Reset() {
	*x = Solution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_consignment_consignment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Solution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Solution) ProtoMessage() {}

func (x *Solution) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_consignment_consignment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Solution.ProtoReflect.Descriptor instead.
func (*Solution) Descriptor() ([]byte, []int) {
	return file_server_proto_consignment_consignment_proto_rawDescGZIP(), []int{1}
}

func (x *Solution) GetCoefs() *Coefficients {
	if x != nil {
		return x.Coefs
	}
	return nil
}

func (x *Solution) GetNRoots() int32 {
	if x != nil {
		return x.NRoots
	}
	return 0
}

//Набор уже решенных уравнений
type Solutions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Solutions []*Solution `protobuf:"bytes,1,rep,name=solutions,proto3" json:"solutions,omitempty"`
}

func (x *Solutions) Reset() {
	*x = Solutions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_consignment_consignment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Solutions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Solutions) ProtoMessage() {}

func (x *Solutions) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_consignment_consignment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Solutions.ProtoReflect.Descriptor instead.
func (*Solutions) Descriptor() ([]byte, []int) {
	return file_server_proto_consignment_consignment_proto_rawDescGZIP(), []int{2}
}

func (x *Solutions) GetSolutions() []*Solution {
	if x != nil {
		return x.Solutions
	}
	return nil
}

//Пустышка для GetAll()
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_consignment_consignment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_consignment_consignment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_consignment_consignment_proto_rawDescGZIP(), []int{3}
}

var File_server_proto_consignment_consignment_proto protoreflect.FileDescriptor

var file_server_proto_consignment_consignment_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x0c, 0x43, 0x6f, 0x65,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x62, 0x12, 0x0c, 0x0a, 0x01, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x63, 0x22, 0x54, 0x0a, 0x08, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x05, 0x63, 0x6f, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x65,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x63, 0x6f, 0x65, 0x66, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x09, 0x53, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x0c, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x82, 0x01, 0x0a, 0x06, 0x53, 0x6f,
	0x6c, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x05, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x12, 0x19, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x65, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_consignment_consignment_proto_rawDescOnce sync.Once
	file_server_proto_consignment_consignment_proto_rawDescData = file_server_proto_consignment_consignment_proto_rawDesc
)

func file_server_proto_consignment_consignment_proto_rawDescGZIP() []byte {
	file_server_proto_consignment_consignment_proto_rawDescOnce.Do(func() {
		file_server_proto_consignment_consignment_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_consignment_consignment_proto_rawDescData)
	})
	return file_server_proto_consignment_consignment_proto_rawDescData
}

var file_server_proto_consignment_consignment_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_server_proto_consignment_consignment_proto_goTypes = []interface{}{
	(*Coefficients)(nil), // 0: consignment.Coefficients
	(*Solution)(nil),     // 1: consignment.Solution
	(*Solutions)(nil),    // 2: consignment.Solutions
	(*GetRequest)(nil),   // 3: consignment.GetRequest
}
var file_server_proto_consignment_consignment_proto_depIdxs = []int32{
	0, // 0: consignment.Solution.coefs:type_name -> consignment.Coefficients
	1, // 1: consignment.Solutions.solutions:type_name -> consignment.Solution
	0, // 2: consignment.Solver.Solve:input_type -> consignment.Coefficients
	3, // 3: consignment.Solver.GetAll:input_type -> consignment.GetRequest
	1, // 4: consignment.Solver.Solve:output_type -> consignment.Solution
	2, // 5: consignment.Solver.GetAll:output_type -> consignment.Solutions
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_server_proto_consignment_consignment_proto_init() }
func file_server_proto_consignment_consignment_proto_init() {
	if File_server_proto_consignment_consignment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_consignment_consignment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coefficients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_consignment_consignment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Solution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_consignment_consignment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Solutions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_consignment_consignment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_consignment_consignment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_consignment_consignment_proto_goTypes,
		DependencyIndexes: file_server_proto_consignment_consignment_proto_depIdxs,
		MessageInfos:      file_server_proto_consignment_consignment_proto_msgTypes,
	}.Build()
	File_server_proto_consignment_consignment_proto = out.File
	file_server_proto_consignment_consignment_proto_rawDesc = nil
	file_server_proto_consignment_consignment_proto_goTypes = nil
	file_server_proto_consignment_consignment_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SolverClient is the client API for Solver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SolverClient interface {
	Solve(ctx context.Context, in *Coefficients, opts ...grpc.CallOption) (*Solution, error)
	GetAll(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Solutions, error)
}

type solverClient struct {
	cc grpc.ClientConnInterface
}

func NewSolverClient(cc grpc.ClientConnInterface) SolverClient {
	return &solverClient{cc}
}

func (c *solverClient) Solve(ctx context.Context, in *Coefficients, opts ...grpc.CallOption) (*Solution, error) {
	out := new(Solution)
	err := c.cc.Invoke(ctx, "/consignment.Solver/Solve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *solverClient) GetAll(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Solutions, error) {
	out := new(Solutions)
	err := c.cc.Invoke(ctx, "/consignment.Solver/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SolverServer is the server API for Solver service.
type SolverServer interface {
	Solve(context.Context, *Coefficients) (*Solution, error)
	GetAll(context.Context, *GetRequest) (*Solutions, error)
}

// UnimplementedSolverServer can be embedded to have forward compatible implementations.
type UnimplementedSolverServer struct {
}

func (*UnimplementedSolverServer) Solve(context.Context, *Coefficients) (*Solution, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Solve not implemented")
}
func (*UnimplementedSolverServer) GetAll(context.Context, *GetRequest) (*Solutions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterSolverServer(s *grpc.Server, srv SolverServer) {
	s.RegisterService(&_Solver_serviceDesc, srv)
}

func _Solver_Solve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Coefficients)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SolverServer).Solve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consignment.Solver/Solve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SolverServer).Solve(ctx, req.(*Coefficients))
	}
	return interceptor(ctx, in, info, handler)
}

func _Solver_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SolverServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consignment.Solver/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SolverServer).GetAll(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Solver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "consignment.Solver",
	HandlerType: (*SolverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Solve",
			Handler:    _Solver_Solve_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _Solver_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/proto/consignment/consignment.proto",
}
